Q1

Find the names of all students who are friends with someone named Gabriel. 

SELECT h2.name
FROM (SELECT  ID1 AS first, ID2 AS second
FROM friend 
UNION
SELECT ID2 AS first, ID1 As first
FROM friend) AS candidates
JOIN Highschooler h1 ON candidates.first = h1.id
JOIN Highschooler h2 ON candidates.second = h2.id
WHERE h1.name = "Gabriel"



Q2
For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like. 

SELECT h1.name, h1.grade, h2.name, h2.grade
FROM likes l1
JOIN highschooler h1
ON l1.id1=h1.id
JOIN highschooler h2
ON l1.id2=h2.id
WHERE h1.grade - h2.grade >= 2


Q3
For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order. 



-------
SELECT h1.name, h1.grade, h2.name, h2.grade
FROM (
SELECT l1.ID1 as aid, l1.ID2 AS bid
FROM likes l1
UNION ALL
SELECT l2.ID2 as aid, l2.ID1 AS bid
FROM likes l2
) AS newlike
JOIN highschooler h1
ON h1.id=newlike.aid
JOIN highschooler h2
ON h2.id = newlike.bid
WHERE h1.name < h2.name
GROUP BY aid, bid
HAVING COUNT(*) > 1

Q4
1/1 point (graded)
Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade. 

SELECT h.name, grade
FROM highschooler h
WHERE id not in (SELECT l1.ID1
FROM likes l1
UNION ALL
SELECT l2.ID2
FROM likes l2) 
GROUP BY grade, name


Q5
1/1 point (graded)
For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades. 

SELECT h1.name, h1.grade, h2.name, h2.grade
FROM likes l1
JOIN highschooler h1
ON l1.ID1=h1.ID
left join likes l2
ON l1.ID2=l2.ID1
JOIN highschooler h2
ON l1.ID2 = h2.ID
WHERE l2.ID1 is NULL

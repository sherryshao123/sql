Movie ( mID, title, year, director ) 
English: There is a movie with ID number mID, a title, a release year, and a director. 

Reviewer ( rID, name ) 
English: The reviewer with ID number rID has a certain name. 

Rating ( rID, mID, stars, ratingDate ) 
English: The reviewer rID gave the movie mID a number of stars rating (1-5) on a certain ratingDate. 



Q1 Find the titles of all movies directed by Steven Spielberg. 
SELECT title
FROM Movie
Where director IS "Steven Spielberg"

Q2
1.0/1.0 point (graded)
Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order. 

Note: Your queries are executed using SQLite, so you must conform to the SQL constructs supported by SQLite. 
Code Editor
SELECT distinct year
FROM movie m
JOIN rating r
ON m.mid = r.mid
WHERE stars = 4 or stars = 5



Q3
1.0/1.0 point (graded)
Find the titles of all movies that have no ratings. 
SELECT title
from movie m
LEFT JOIN Rating r
ON m.mid = r.mid
WHERE stars is NULL

Q4
1.0/1.0 point (graded)
Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date. 

SELECT v.name
FROM Movie m
JOIN Reviewer v
ON m.mid=r.mid
JOIN Rating r 
ON r.rid=v.rid
WHERE ratingDate IS NULL

Q5
1.0/1.0 point (graded)
Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars. 
SELECT name AS "reviewer name", title AS "movie title", stars, ratingDate
FROM Movie m
JOIN Reviewer v
ON m.mid=r.mid
LEFT JOIN Rating r 



Q6
1.0/1.0 point (graded)
For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie. 
SELECT v.name, title
FROM Movie m

JOIN rating r1 ON m.mid=r1.mid
JOIN rating r2 ON r1.rid=r2.rid
JOIN Reviewer v on v.rid=r2.rid
WHERE r1.mid=r2.mid
AND r2.stars > r1.stars
AND r2.ratingDate > r1.ratingDate



Q7
1.0/1.0 point (graded)
For each movie that has at least one rating, find the highest number of stars that movie received. Return the movie title and number of stars. Sort by movie title. 
SELECT title, MAX(stars) AS stars
FROM Movie m
JOIN Rating r
ON m.mid=r.mid
GROUP BY m.mid
HAVING COUNT(*) > 1
ORDER BY title


Q8
1.0/1.0 point (graded)
For each movie, return the title and the 'rating spread', that is, the difference between highest and lowest ratings given to that movie. Sort by rating spread from highest to lowest, then by movie title. 
SELECT title, MAX(stars)-Min(stars) AS "rating spread"
FROM Movie m
JOIN rating r
on m.mid=r.mid
GROUP BY m.mid
ORDER BY "rating spread" DESC, title


Q9
0.0/1.0 point (graded)
Find the difference between the average rating of movies released before 1980 and the average rating of movies released after 1980. (Make sure to calculate the average rating for each movie, then the average of those averages for movies before 1980 and movies after. Don't just calculate the overall average rating before and after 1980.) 

SELECT AVG(b.star)-AVG(a.star)
FROM (
SELECT AVG(stars) as star
FROM Rating r 
JOIN movie m ON r.mid=m.mid
WHERE year <=1980
GROUP BY m.mid
) as b  JOIN (
SELECT AVG(stars) as star
FROM Rating r 
JOIN movie m ON r.mid=m.mid
    WHERE year > 1980
GROUP BY m.mid

) as a
